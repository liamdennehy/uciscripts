#!/bin/sh
. /lib/functions.sh

#do_ah () { #allowed_hosts
#  h=$1
#  config_get host $h host
#  [ ! -z "$ah" ] && ah="$ah,"
#  ah="$ah$host"
#  }

do_command () {
  name=$1
  config_get cmd $1 command
  config_get parm $1 parameters
  echo "command[$name]=$cmd $parm"
  }

do_includefile () {
  f=$1
  config_get file $f file
  echo "include=$file"
  }

do_includedir () {
  d=$1
  config_get dir $d dir
  echo "include_dir=$dir"
  }

do_options () {
  local ah
  config_get pidfile options pidfile /var/run/nrpe.pid
  config_get serverport options serverport 5666
  config_get serveraddress options serveraddress
  config_get user options user nagios
  config_get group options group nagios
  config_get uid options uid 50
  config_get gid options gid 50
  config_get danger options dont_blame_nrpe 0
  config_get cmdto options commandtimeout 60
  config_get connto options connectiontimeout 300
  config_get weakseed options weakseed 0
  config_get allowedhosts options allowedhosts
  if [ ! -z "$allowedhosts" ]; then
    for host in $allowedhosts; do
      [ ! -z "$ah" ] && ah="$ah,"
      ah="$ah$host"
      done
    fi

  #config_foreach do_ah allowedhosts
  echo "pid_file=$pidfile"
  echo "server_port=$serverport"
  [ ! -z "$serveraddress" ] && echo "server_address=$serveraddress"
  echo "nrpe_user=$user"
  echo "nrpe_group=$group"
  echo "dont_blame_nrpe=$danger"
  echo "debug=$debug"
  echo "allowed_hosts=$ah"
  echo "command_timeout=$cmdto"
  echo "connection_timeout=$connto"
  echo "allow_weak_random_seed=$weakseed"
  export debug
  }

genconf () {
  config_load nrpe
  config_get tmpconf config tmpconf /tmp/etc/nrpe.cfg
  config_get rundir options rundir /var/run/nagios
  config_get debug options debug 0
  mkdir -p $(dirname $tmpconf)
  conf="$(
    do_options
    config_foreach do_includefile includefile
    config_foreach do_includedir includedir
    config_foreach do_command command
    )"
  [ $debug -eq 1 ] && echo "$conf"
  echo "$conf" >$tmpconf
  for p in user uid group gid rundir; do
  config_get $p options $p
  done
}
